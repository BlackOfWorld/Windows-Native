name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
    windows:
      runs-on: windows-latest
      strategy:
        matrix:
          config: [Debug, Release]
          platform: [Win32, x64]
      steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: |
          .\build\premake_win.bat
          $vcvarsall_path = .\build\premake_win.bat vcvarsall
          cmd /c """$vcvarsall_path"" x86_amd64 & set" | foreach {
            if ($_ -match "=") {
              $v = $_.split("="); set-item -force -path "ENV:\$($v[0])"  -value "$($v[1])"
            }
          }
          msbuild .\out\Windows-Native.sln /t:restore /p:RestorePackagesConfig=true
          msbuild .\out\Windows-Native.sln /p:Configuration=${{ matrix.config }} /p:Platform=${{ matrix.platform }}
      - name: Test
        run: .\out\bin\${{ matrix.platform }}\Test*.exe --gtest_color=no --gtest_output=xml:.\tests\results-${{ matrix.platform }}-${{ matrix.config }}.xml
      - name: Convert Gtest to JUnit
        if: success() || failure()
        shell: powershell
        run: |
          $xsl = New-Object System.Xml.Xsl.XslCompiledTransform
          $xsl.Load("${{github.workspace}}\.github\gtest_to_junit.xsl")
          $xsl.Transform("${{github.workspace}}\tests\results-${{ matrix.platform }}-${{ matrix.config }}.xml", "${{github.workspace}}\tests\convert-${{ matrix.platform }}-${{ matrix.config }}.xml")
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: test-results
          path: .\tests\results-${{ matrix.platform }}-${{ matrix.config }}.xml